"""
Django settings for kbase_ui_py project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import sys
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-)5p&+343a(_)0rk^6&vbwge1jn-tmx#sl5#5^n8+0wfq&zskt^"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "127.0.0.1",
    "ci.kbase.us",
    "narrative-dev.kbase.us",
    "narrative.kbase.us",
    "next.kbase.us",
]

# Application definition
sys.modules["fontawesome_free"] = __import__("fontawesome-free")
INSTALLED_APPS = [
    # Our apps
    "about.apps.AboutConfig",
    "dashboard.apps.DashboardConfig",
    "navigator.apps.NavigatorConfig",
    "user_profile.apps.UserProfileConfig",
    "catalog.apps.CatalogConfig",
    "feeds.apps.FeedsConfig",
    "auth.apps.AuthConfig",
    "narrative_manager.apps.NarrativeManagerConfig",
    "orgs.apps.OrgsConfig",
    "search.apps.SearchConfig",
    "jobs.apps.JobsConfig",
    "account.apps.AccountConfig",
    "object.apps.ObjectConfig",
    "type.apps.TypeConfig",
    "biochem_search.apps.BiochemSearchConfig",
    "samples.apps.SamplesConfig",
    # System
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "bootstrap4",
    "fontawesome_free",
    "markdownify.apps.MarkdownifyConfig",
]

MIDDLEWARE = [
    "middleware.auth.simple_middleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "kbase_ui_py.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["kbase_ui_py/templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "kbase_ui_py.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation"
        ".UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/Los_Angeles"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

BOOTSTRAP4 = {
    # The complete URL to the Bootstrap CSS file
    # Note that a URL can be either a string,
    # e.g. "https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css",
    # or a dict like the default value below.
    "css_url": {"href": "/static/bootstrap/css/bootstrap.min.css"},
    # The complete URL to the Bootstrap bundle JavaScript file
    "javascript_url": {
        "url": "/static/bootstrap/js/bootstrap.bundle.min.js",
    },
    # The complete URL to the Bootstrap CSS theme file (None means no theme)
    "theme_url": None,
    # The URL to the jQuery JavaScript file (full)
    "jquery_url": {"url": "/static/jquery/jquery.min.js"},
    # The URL to the jQuery JavaScript file (slim)
    "jquery_slim_url": {
        "url": "/static/jquery/jquery.slim.min.js",
    },
    # Put JavaScript in the HEAD section of the HTML document (only relevant if you
    # use bootstrap4.html)
    "javascript_in_head": False,
    # Include jQuery with Bootstrap JavaScript False|falsy|slim|full (default=False)
    # False - means tag bootstrap_javascript use default value - `falsy` and does not
    # include jQuery)
    "include_jquery": False,
    # Label class to use in horizontal forms
    "horizontal_label_class": "col-md-3",
    # Field class to use in horizontal forms
    "horizontal_field_class": "col-md-9",
    # Set placeholder attributes to label if no placeholder is provided
    "set_placeholder": True,
    # Class to indicate required (better to set this in your Django form)
    "required_css_class": "",
    # Class to indicate error (better to set this in your Django form)
    "error_css_class": "is-invalid",
    # Class to indicate success, meaning the field has valid input (better to set
    # this in your Django form)
    "success_css_class": "is-valid",
    # Renderers (only set these if you have studied the source and understand the
    # inner workings)
    "formset_renderers": {
        "default": "bootstrap4.renderers.FormsetRenderer",
    },
    "form_renderers": {
        "default": "bootstrap4.renderers.FormRenderer",
    },
    "field_renderers": {
        "default": "bootstrap4.renderers.FieldRenderer",
        "inline": "bootstrap4.renderers.InlineFieldRenderer",
    },
}

KBASE_UI_HOSTNAME = os.environ.get("KBASE_UI_HOSTNAME", "ci.kbase.us")
if KBASE_UI_HOSTNAME is not None:
    KBASE_UI_ORIGIN = f"https://{KBASE_UI_HOSTNAME}"
else:
    KBASE_UI_ORIGIN = None
KBASE_SERVICE_HOSTNAME = os.environ.get("KBASE_SERVICE_HOSTNAME", "ci.kbase.us")
KBASE_SERVICE_ORIGIN = f"https://{KBASE_SERVICE_HOSTNAME}"

KBASE = {
    "config": {"token_cookie_name": "kbase_session"},
    "ui_base_url": KBASE_UI_ORIGIN or KBASE_SERVICE_ORIGIN,
    "service_base_url": KBASE_SERVICE_ORIGIN,
    "services": {
        "auth": {"url": f"{KBASE_SERVICE_ORIGIN}/services/auth"},
        "user_profile": {"url": f"{KBASE_SERVICE_ORIGIN}/services/user_profile/rpc"},
        "search": {"url": f"{KBASE_SERVICE_ORIGIN}/services/searchapi2/rpc"},
        "catalog": {"url": f"{KBASE_SERVICE_ORIGIN}/services/catalog"},
        "feeds": {"url": f"{KBASE_SERVICE_ORIGIN}/services/feeds"},
        "groups": {"url": f"{KBASE_SERVICE_ORIGIN}/services/groups"},
        "workspace": {"url": f"{KBASE_SERVICE_ORIGIN}/services/ws"},
        "narrative_method_store": {
            "url": f"{KBASE_SERVICE_ORIGIN}/services/narrative_method_store/rpc",
            "image_base_url": f"{KBASE_SERVICE_ORIGIN}/services/narrative_method_store/",
        },
    },
}
